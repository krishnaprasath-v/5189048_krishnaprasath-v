Recursive sum
#include <stdio.h>
#include <string.h>

long long digitSum(char s[]) {
    long long sum = 0;
    for(int i=0; s[i] != '\0'; i++){
        sum += (s[i] - '0');
    }
    return sum;
}

long long superDigitCalc(long long n) {
    if(n < 10) return n;
    long long temp = 0;
    while(n > 0){
        temp += n % 10;
        n /= 10;
    }
    return superDigitCalc(temp);
}

int main() {
    char n[100005];
    int k;
    scanf("%s %d", n, &k);

    long long sum = digitSum(n);
    sum = sum * k;

    long long result = superDigitCalc(sum);

    printf("%lld\n", result);
    return 0;
}
